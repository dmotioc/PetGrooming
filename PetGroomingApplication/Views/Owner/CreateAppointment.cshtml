@model PetGroomingApplication.Models.Appointment
@{
    ViewBag.Title = "Create Appointment";
    ViewBag.targetMenu = "create-appointment";
}


<hr />
<h4>Create Appointment</h4>
@using (Html.BeginForm("CreateAppointment", "Owner", FormMethod.Post, new { role = "form" }))
{

    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
 
<div style="width:70%">
    
    <div id="form-validation-error" class="bg-warning text-danger hidden" style="padding:10px;"></div>
   
    <div class="row text-right">
        <a href="/Pet/Create" class="btn btn-default btn-sm  navbar-btn pull-right align-top"> Add a pet </a>
    </div>

    <div class="row padding-5">
        @Html.Label("PetID", "Select a pet", htmlAttributes: new { @class = "control-label col-md-2" })
        @{
            var list = ViewData["myPets"] as IEnumerable<SelectListItem>;
            if (list.Count() == 0)
            {
                <p>You haven't add any pet yet. </p>
            }
            else
            {
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.PetID, list, "Please select the pet", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PetID, "", new { @class = "text-danger" })
                </div>
            }
        }
    </div>

    <div id="divGroomersAndServices">
        @Html.Partial("GetGroomersAndServicesPartial")
    </div>

    <div class="row padding-5">
        @{
            string varDate = (Model.DateTime == DateTime.MinValue ? "" : Model.DateTime.Date.ToString());
            string varTime = (Model.DateTime == DateTime.MinValue ? "" : Model.DateTime.TimeOfDay.ToString());
        }
        <label class="control-label col-md-2">Date</label>
        <div class="col-md-2">
            @Html.TextBox("Date", varDate, new { @class = "form-control date-control" })
        </div>
        <label class="control-label col-md-1">Time</label>
        <div class="col-md-2">
            @Html.TextBox("Time", varTime, new { @class = "form-control time-control" })
        </div>
        <span class='calendar-icon  @(Model.GroomerID == Guid.Empty ? "hidden" : "show")'>
            <i class="fa fa-calendar"></i>
        </span>
    </div>
    <div id="divGroomerCalendar" class="hidden">
        @Html.Partial("GetGroomerCalendarPartial")
    </div>

    <div class="row">
        <div class="col-md-offset-2 col-md-8">
            <input type="button" id="submit" value=" Book appointment " class="btn btn-primary text-uppercase" />
        </div>
    </div>
</div>
}



@section Scripts {
    <script>
        $(function () {
            $("#PetID").change(function () {
                let id = $(this).val();
                var data = { 'id': id };
                $("#divGroomersAndServices").load('/Owner/GetGroomersAndServices', data);
             });

            $(document).on("change", "#ServiceID", function () {
                let id = $(this).val();
                var data = { 'id': id };
                $("#divServiceDetails").load('/Owner/ServiceDetails', data);
             });

            $(document).on("change", "#GroomerID", function () {
                let id = $(this).val();
                var data = { 'id': id };
                $("#divGroomerCalendar").load('/Owner/GroomerCalendar', data).removeClass("hidden").addClass("show", 1000);
                $(".calendar-icon").removeClass("hidden").addClass("show");
             });


            $(document).on("click", "#submit", function () {
                const dateTime = $('#Date').val() + " " + $('#Time').val();
                var petID = $('#@Html.IdFor(m=>m.PetID)').val();
                var groomerID = $('#@Html.IdFor(m=>m.GroomerID)').val();
                var serviceID = $('#@Html.IdFor(m=>m.ServiceID)').val();
                var modelData = {
                    "PetID": petID,
                    "GroomerID": groomerID,
                    "ServiceID": serviceID,
                    "DateTime": dateTime,
                };
                $.ajax({
                    type: 'POST',
                    cache: false,
                    url: '/Owner/CreateAppointment',
                    data: modelData,
                    dataType: 'text',
                    success: function (data, textStatus, jqXHR) {
                        if (data.indexOf("OK") < 0) {
                            console.log(data);
                            $("#form-validation-error").html(data).removeClass("hidden").addClass("show");
                        } else {
                            window.location.href="/Owner/AppointmentRegisterSuccess"
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) { }
                });

            });

            $(document).on("click", ".calendar-icon", function () {
                $("#divGroomerCalendar").removeClass("hidden").addClass("show");
            });

            $(document).on("click", ".Available", function () {
                const dateTime = $(this).attr('data-date');
                const dateTimeArray = dateTime.split(" ");
                $('#Date').hide().val(dateTimeArray[0]).fadeIn("fast");
                $('#Time').hide().val(dateTimeArray[1]).fadeIn("fast");
                $("#divGroomerCalendar").removeClass("show").addClass("hidden", 500);
                var groomerID = $('#@Html.IdFor(m=>m.GroomerID)').val();
                var serviceID = $('#@Html.IdFor(m=>m.ServiceID)').val();
                var modelData = {
                    "DateTime": dateTime,
                    "GroomerID": groomerID,
                    "ServiceID": serviceID
                };
                $.ajax({
                    type: 'POST',
                    cache: false,
                    url: '/Owner/CheckAvailability',
                    data: modelData,
                    dataType: 'text',
                    success: function (data, textStatus, jqXHR) {
                        if (data == 'false') {
                            $("#form-validation-error").html("There is not enough available time for this service at this time!").removeClass("hidden").addClass("show");
                        } else {
                            $("#form-validation-error").html("").removeClass("show").addClass("hidden");
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) { }
                });
            });
         });

    </script>
}

<style>



    table.calendar td {
        width: 40px;
        height: 25px;
        border: 1px solid #ddd;
        text-align: center;
        /*padding-top: 12px;
                    padding-bottom: 12px;*/
    }

        table.calendar td.date {
            width: 8.5rem;
        }

    table.calendar th {
        text-align: center;
        font-stretch: extra-condensed;
    }

    .Available {
        background-color: yellowgreen;
    }

    .pointer {
        cursor: pointer;
    }

    .calendar-icon {
        font-size: 1.5rem;
        cursor: pointer;
    }

    .Booked {
        background: #ddd;
        color: #999;
    }

    div.legend {
        display: flex;
        margin-top: 20px;
        margin-bottom: 20px;
    }

        div.legend div {
            border: 1px solid #eee;
            width: 20px;
            height: 20px;
            text-align: center;
            margin-right: 10px;
        }

    .p-2 {
        padding: 10px;
    }

    #divGroomerCalendar {
        -webkit-transition: all 0.8s ease;
        -moz-transition: all 0.8s ease;
        -o-transition: all 0.8s ease;
        transition: all 1.5s ease;
    }
</style>


